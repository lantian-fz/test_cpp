#define _CRT_SECURE_NO_WARNINGS 1
//小易的升级之路
//小易经常沉迷于网络游戏.有一次, 他在玩一个打怪升级的游戏, 他的角色的初始能力值为 a.在接下来的一段时间内, 
//他将会依次遇见n个怪物, 每个怪物的防御力为b1, b2, b3...bn.如果遇到的怪物防御力bi小于等于小易的当前能力值c, 
//那么他就能轻松打败怪物, 并 且使得自己的能力值增加bi; 如果bi大于c, 那他也能打败怪物, 但他的能力值只能
//增加bi 与c的最大公约数.那么问题来了, 在一系列的锻炼后, 小易的最终能力值为多少 ?
//输入描述 :对于每组数据, 第一行是两个整数n(1≤n<100000)表示怪物的数量和a表示小易的初始能力值.
//	      第二行n个整数, b1, b2...bn(1≤bi≤n)表示每个怪物的防御力
//输出描述 :对于每组数据, 输出一行.每行仅包含一个整数, 表示小易的最终能力值
//输入: <pre>3 50
//      50 105 200
//      5 20
//      30 20 15 40 100< / pre>
//输出: 110
//      205
#include <iostream>
#include <vector>
using namespace std;

int fun(int b, int c)
{
	int ret = 0;
	for (int i = c; i > 0; i--)
	{
		if (b%i == 0 && c%i == 0)
			return i;
	}
	return 0;
}

void xiaoyi(vector<int> &b, int c)
{
	for (size_t i = 0; i < b.size(); i++)
	{
		if (b[i] <= c)
			c += b[i];
		else
			c += fun(b[i], c);
	}
	cout << c << endl;
}

int main()
{
	int n = 0;
	int c = 0;
	while (cin >> n >> c)
	{
		vector<int> b;
		while (n--)
		{
			int bn = 0;
			cin >> bn;
			b.push_back(bn);
		}
		xiaoyi(b, c);
	}

	return 0;
}